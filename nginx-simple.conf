events {
    worker_connections 1024;
}

http {
    upstream django_app {
        server web:8000;
    }
    
    # Add CORS headers to all responses
    map $request_method $cors_method {
        OPTIONS 11;
        GET     1;
        POST    1;
        PUT     1;
        DELETE  1;
        default 0;
    }
    
    server {
        listen 80;
        server_name _;
        return 301 https://$host:8443$request_uri;
    }
    
    server {
        listen 443 ssl;
        http2 on;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Add CORS headers to all responses
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, x-api-key" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        location /options {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Max-Age 3600 always;
                add_header Content-Length 0;
                return 204;
            }
            return 404;
        }
        
        # Serve media files directly
        location /media/ {
            alias /usr/share/nginx/html/media/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location / {
            # Handle OPTIONS requests directly
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, x-api-key" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age 3600 always;
                add_header Content-Length 0;
                return 204;
            }
            
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        location /health {
            return 200 "healthy\n";
        }
    }
    
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
}